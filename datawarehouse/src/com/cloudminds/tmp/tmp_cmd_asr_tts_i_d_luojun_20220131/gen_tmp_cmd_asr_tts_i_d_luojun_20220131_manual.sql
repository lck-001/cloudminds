set hive.exec.dynamic.partition.mode = nonstrict;
set hive.merge.mapfiles = true;
set hive.merge.mapredfiles = true;
set hive.exec.max.dynamic.partitions = 60000;
set mapreduce.job.queuename=root.users.hive;

-- drop table if exists test.lj_test;
-- create table test.lj_test as 

with ods_hitlog_d as (
    select
        question_id,
        agentid as agent_id,
        agentname as agent_name,
        algo,
        before_context,
        in_context,
        out_context,
        cost,
        intent_id,
        intent as intent_name,
        domainid as domain_id,
    domain as domain_name,
    envinfo as env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    robotid as robot_id,
    sessionid as session_id,
    source as qa_from,
    supplier,
    suppliertype as supplier_type,
    third_cost,
    third_sessionid as third_session_id,
    username as robot_account_id,
    lower(regexp_replace(nvl(trim(request),''), '\r|\n|\t', '')) as request,
    lower(regexp_replace(nvl(trim(response),''), '\r|\n|\t', '')) as response,
    time,
    k8s_env_name
from cdm_sv.ods_hitlog_d
    -- where substring(tdate,0,7) = '2020-09'
where tdate >= '2021-01-01' and tdate <= '2021-10-31' and (trim(lower(regexp_replace(nvl(trim(request),''), '\r|\n|\t', ''))) != '' or trim(lower(regexp_replace(nvl(trim(response),''), '\r|\n|\t', ''))) != '')
    ),
    asr as (
select
    question_id,
    robot_id,
    lower(regexp_replace(nvl(trim(asr_text),''), '\r|\n|\t', '')) as asr_text,
    audio_file_url,
    event_time,
    k8s_env_name
--     from cdmdwd.dwd_asr_cmd_asr_i_d
-- where substring(dt,0,7) = '2020-09' and asr_text != '' and asr_text is not null
from test.tmp_dwd_asr_cmd_asr_i_d
where dt >= '2021-01-01' and dt <= '2021-10-31'-- and asr_text != '' and asr_text is not null
    ),
    tts as (
select
    guid as question_id,
    robot_id,
    lower(regexp_replace(nvl(trim(text),''), '\r|\n|\t', '')) as tts_text,
    audio as audio_url,
    event_time,
    k8s_env_name
from cdmdwd.dwd_tts_cmd_tts_i_d
    -- where substring(dt,0,7) = '2020-09' and trim(text) != '' and text is not null and trim(text) != '未识别'
where dt >= '2021-01-01' and dt <= '2021-10-31'-- and trim(text) != '' and text is not null and trim(text) != '未识别'
    ),
    full_join_asr as (
select
    case when t1.question_id != '' and t1.question_id is not null then t1.question_id
    else nvl(t2.question_id,'')
    end as question_id,
    case when t1.robot_id != '' and t1.robot_id is not null then t1.robot_id
    else nvl(t2.robot_id,'')
    end as robot_id,
    t1.agent_id,
    t1.agent_name,
    t1.algo,
    t1.before_context,
    t1.in_context,
    t1.out_context,
    t1.cost,
    t1.intent_id,
    t1.intent_name,
    t1.domain_id,
    t1.domain_name,
    t1.env_info,
    t1.matched_template,
    t1.param_info,
    t1.parameters,
    t1.qa_result,
    t1.session_id,
    t1.qa_from,
    t1.supplier,
    t1.supplier_type,
    t1.third_cost,
    t1.third_session_id,
    t1.robot_account_id,
    t1.request,
    t1.response,
    t1.time,
    t1.k8s_env_name as t1_k8s_env_name,
    t2.asr_text,
    t2.audio_file_url,
    t2.event_time,
    t2.k8s_env_name as t2_k8s_env_name
from ods_hitlog_d t1
    full join (
    select
    question_id,
    robot_id,
    asr_text,
    audio_file_url,
    event_time,
    k8s_env_name
    from asr where asr_text != '' and asr_text is not null
    ) t2 on trim(t1.request) = trim(t2.asr_text) and trim(t1.robot_id) = trim(t2.robot_id) and to_date(t1.time) = to_date(t2.event_time) and trim(t1.k8s_env_name) = trim(t2.k8s_env_name)
    ),
    full_unjoin_asr as (
select
    question_id,
    robot_id,
    '' as agent_id,
    '' as agent_name,
    '' as algo,
    '' as before_context,
    '' as in_context,
    '' as out_context,
    0 as cost,
    '' as intent_id,
    '' as intent_name,
    '' as domain_id,
    '' as domain_name,
    '' as env_info,
    '' as matched_template,
    '' as param_info,
    '' as parameters,
    '' as qa_result,
    '' as session_id,
    '' as qa_from,
    '' as supplier,
    '' as supplier_type,
    0 as third_cost,
    '' as third_session_id,
    '' as robot_account_id,
    '' as request,
    '' as response,
    '' as time,
    '' as t1_k8s_env_name,
    asr_text,
    audio_file_url,
    event_time,
    k8s_env_name as t2_k8s_env_name
from asr where asr_text = '' or asr_text is null
    ),
    union_asr as (
select
    question_id,
    robot_id,
    agent_id,
    agent_name,
    algo,
    before_context,
    in_context,
    out_context,
    cost,
    intent_id,
    intent_name,
    domain_id,
    domain_name,
    env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    session_id,
    qa_from,
    supplier,
    supplier_type,
    third_cost,
    third_session_id,
    robot_account_id,
    request,
    response,
    time,
    t1_k8s_env_name,
    asr_text,
    audio_file_url,
    event_time,
    t2_k8s_env_name
from (
    select
    question_id,
    robot_id,
    agent_id,
    agent_name,
    algo,
    before_context,
    in_context,
    out_context,
    cost,
    intent_id,
    intent_name,
    domain_id,
    domain_name,
    env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    session_id,
    qa_from,
    supplier,
    supplier_type,
    third_cost,
    third_session_id,
    robot_account_id,
    request,
    response,
    time,
    t1_k8s_env_name,
    asr_text,
    audio_file_url,
    event_time,
    t2_k8s_env_name,
    row_number() OVER (PARTITION BY question_id,robot_id,request,response,time ORDER BY abs(unix_timestamp(substring(time,0,19),'yyyy-MM-dd HH:mm:ss')-unix_timestamp(substring(event_time,0,19),'yyyy-MM-dd HH:mm:ss')) asc) as rnk
    from full_join_asr  -- join上 最小时间差记录
    ) t where t.rnk = 1
union
select
    question_id,
    robot_id,
    agent_id,
    agent_name,
    algo,
    before_context,
    in_context,
    out_context,
    cost,
    intent_id,
    intent_name,
    domain_id,
    domain_name,
    env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    session_id,
    qa_from,
    supplier,
    supplier_type,
    third_cost,
    third_session_id,
    robot_account_id,
    request,
    response,
    time,
    t1_k8s_env_name,
    asr_text,
    audio_file_url,
    event_time,
    t2_k8s_env_name
from full_unjoin_asr  -- 未join上 补充上
    ),
    full_join_tts as (
select
    case when x1.question_id != '' and x1.question_id is not null then x1.question_id
    else nvl(x2.question_id,'')
    end as question_id,
    case when x1.robot_id != '' and x1.robot_id is not null then x1.robot_id
    else nvl(x2.robot_id,'')
    end as robot_id,
    x1.agent_id,
    x1.agent_name,
    x1.algo,
    x1.before_context,
    x1.in_context,
    x1.out_context,
    x1.cost,
    x1.intent_id,
    x1.intent_name,
    x1.domain_id,
    x1.domain_name,
    x1.env_info,
    x1.matched_template,
    x1.param_info,
    x1.parameters,
    x1.qa_result,
    x1.session_id,
    x1.qa_from,
    x1.supplier,
    x1.supplier_type,
    x1.third_cost,
    x1.third_session_id,
    x1.robot_account_id,
    x1.request,
    x1.response,
    x1.time,
    x1.t1_k8s_env_name,
    x1.asr_text,
    x1.audio_file_url,
    x1.event_time as t2_event_time,
    x1.t2_k8s_env_name,
    x2.tts_text,
    x2.audio_url,
    x2.event_time as t3_event_time,
    x2.k8s_env_name as t3_k8s_env_name
from union_asr x1
    full join (
    select
    question_id,
    robot_id,
    tts_text,
    audio_url,
    event_time,
    k8s_env_name
    from tts where trim(tts_text) != '' and tts_text is not null and trim(tts_text) != '未识别'
    ) x2 on trim(x1.response) = trim(x2.tts_text) and trim(x1.robot_id) = trim(x2.robot_id) and to_date(x1.time) = to_date(x2.event_time) and trim(x1.t1_k8s_env_name) = trim(x2.k8s_env_name)
    ),
    full_unjoin_tts as (
select
    question_id,
    robot_id,
    '' as agent_id,
    '' as agent_name,
    '' as algo,
    '' as before_context,
    '' as in_context,
    '' as out_context,
    0 as cost,
    '' as intent_id,
    '' as intent_name,
    '' as domain_id,
    '' as domain_name,
    '' as env_info,
    '' as matched_template,
    '' as param_info,
    '' as parameters,
    '' as qa_result,
    '' as session_id,
    '' as qa_from,
    '' as supplier,
    '' as supplier_type,
    0 as third_cost,
    '' as third_session_id,
    '' as robot_account_id,
    '' as request,
    '' as response,
    '' as time,
    '' as t1_k8s_env_name,
    '' as asr_text,
    '' as audio_file_url,
    '' as t2_event_time,
    '' as t2_k8s_env_name,
    tts_text,
    audio_url,
    event_time as t3_event_time,
    k8s_env_name as t3_k8s_env_name
from tts where trim(tts_text) = '' or tts_text is null or trim(tts_text) = '未识别'
    ),
    union_tts as (
select
    question_id,
    robot_id,
    agent_id,
    agent_name,
    algo,
    before_context,
    in_context,
    out_context,
    cost,
    intent_id,
    intent_name,
    domain_id,
    domain_name,
    env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    session_id,
    qa_from,
    supplier,
    supplier_type,
    third_cost,
    third_session_id,
    robot_account_id,
    request,
    response,
    time,
    t1_k8s_env_name,
    asr_text,
    audio_file_url,
    t2_event_time,
    t2_k8s_env_name,
    tts_text,
    audio_url,
    t3_event_time,
    t3_k8s_env_name
from (
    select
    question_id,
    robot_id,
    agent_id,
    agent_name,
    algo,
    before_context,
    in_context,
    out_context,
    cost,
    intent_id,
    intent_name,
    domain_id,
    domain_name,
    env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    session_id,
    qa_from,
    supplier,
    supplier_type,
    third_cost,
    third_session_id,
    robot_account_id,
    request,
    response,
    time,
    t1_k8s_env_name,
    asr_text,
    audio_file_url,
    t2_event_time,
    t2_k8s_env_name,
    tts_text,
    audio_url,
    t3_event_time,
    t3_k8s_env_name,
    row_number() OVER (PARTITION BY question_id,robot_id,request,response,time ORDER BY abs(unix_timestamp(substring(time,0,19),'yyyy-MM-dd HH:mm:ss')-unix_timestamp(substring(t3_event_time,0,19),'yyyy-MM-dd HH:mm:ss')) asc) as rnk
    from full_join_tts
    ) t where t.rnk = 1
union
select
    question_id,
    robot_id,
    agent_id,
    agent_name,
    algo,
    before_context,
    in_context,
    out_context,
    cost,
    intent_id,
    intent_name,
    domain_id,
    domain_name,
    env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    session_id,
    qa_from,
    supplier,
    supplier_type,
    third_cost,
    third_session_id,
    robot_account_id,
    request,
    response,
    time,
    t1_k8s_env_name,
    asr_text,
    audio_file_url,
    t2_event_time,
    t2_k8s_env_name,
    tts_text,
    audio_url,
    t3_event_time,
    t3_k8s_env_name
from full_unjoin_tts
    ),
    join_data as (
select
    question_id,
    robot_id,
    agent_id,
    agent_name,
    algo,
    before_context,
    in_context,
    out_context,
    cost,
    intent_id,
    intent_name,
    domain_id,
    domain_name,
    env_info,
    matched_template,
    param_info,
    parameters,
    qa_result,
    session_id,
    qa_from,
    supplier,
    supplier_type,
    third_cost,
    third_session_id,
    robot_account_id,
    request,
    response,
    time as t1_event_time,
    t1_k8s_env_name,
    asr_text,
    audio_file_url as asr_audio_url,
    t2_event_time,
    t2_k8s_env_name,
    tts_text,
    audio_url as tts_audio_url,
    t3_event_time,
    t3_k8s_env_name,
    case when t1_k8s_env_name is not null and trim(t1_k8s_env_name) != '' then t1_k8s_env_name
    when t2_k8s_env_name is not null and trim(t2_k8s_env_name) != '' then t2_k8s_env_name
    else nvl(t3_k8s_env_name,'')
    end as k8s_env_name,
    least(if(nvl(time,'') = '','9999-12-31 23:59:59.999',time),
    if(nvl(t2_event_time,'') = '','9999-12-31 23:59:59.999',t2_event_time),
    if(nvl(t3_event_time,'') = '','9999-12-31 23:59:59.999',t3_event_time)) as cmd_start_time,
    greatest(if(nvl(time,'') = '','',time),
    if(nvl(t2_event_time,'') = '','',t2_event_time),
    if(nvl(t3_event_time,'') = '','',t3_event_time)) as cmd_end_time
from union_tts x1
    )
insert overwrite table cdmtmp.tmp_cmd_asr_tts_i_d_luojun_20220131 partition(dt)
select
    nvl(question_id,'') as question_id,
    nvl(robot_id,'') as robot_id,
    nvl(agent_id,'') as agent_id,
    nvl(agent_name,'') as agent_name,
    nvl(algo,'') as algo,
    nvl(before_context,'') as before_context,
    nvl(in_context,'') as in_context,
    nvl(out_context,'') as out_context,
    nvl(cast(cost as int),0) as cost,
    nvl(intent_id,'') as intent_id,
    nvl(intent_name,'') as intent_name,
    nvl(domain_id,'') as domain_id,
    nvl(domain_name,'') as domain_name,
    nvl(env_info,'') as env_info,
    nvl(matched_template,'') as matched_template,
    nvl(param_info,'') as param_info,
    nvl(parameters,'') as parameters,
    nvl(qa_result,'') as qa_result,
    nvl(session_id,'') as session_id,
    nvl(qa_from,'') as qa_from,
    nvl(supplier,'') as supplier,
    nvl(supplier_type,'') as supplier_type,
    nvl(cast(third_cost as int),0) as third_cost,
    nvl(third_session_id,'') as third_session_id,
    nvl(robot_account_id,'') as robot_account_id,
    nvl(request,'') as request,
    nvl(response,'') as response,
    nvl(t1_event_time,'') as t1_event_time,
    nvl(t1_k8s_env_name,'') as t1_k8s_env_name,
    nvl(asr_text,'') as asr_text,
    nvl(asr_audio_url,'') as asr_audio_url,
    nvl(t2_event_time,'') as t2_event_time,
    nvl(t2_k8s_env_name,'') as t2_k8s_env_name,
    nvl(tts_text,'') as tts_text,
    nvl(tts_audio_url,'') as tts_audio_url,
    nvl(t3_event_time,'') as t3_event_time,
    nvl(t3_k8s_env_name,'') as t3_k8s_env_name,
    nvl(k8s_env_name,'') as k8s_env_name,
    nvl(cmd_start_time,'') as conversation_start_time,
    nvl(cmd_end_time,'') as conversation_end_time,
    to_date(cmd_start_time) as dt
from join_data
         distribute by dt;
